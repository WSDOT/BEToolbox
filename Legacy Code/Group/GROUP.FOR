C///////////////////////////////////////////////////////////////////////
C// BEToolbox - Bridge Engineering Toolbox
C// Copyright (C) 2000, Washington State Department of Transportation
C//                     Bridge and Structures Office
C//
C// This software was developed as part of the Alternate Route Project
C//
C// This program is free software; you can redistribute it and/or modify
C// it under the terms of the Alternate Route Open Source License as
C// published by the Washington State Department of Transportation,
C// Bridge and Structures Office.
C//
C// This program is distributed in the hope that it will be useful,
C// but is distributed AS IS, WITHOUT ANY WARRANTY; without even the
C// implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
C// PURPOSE.  See the Alternate Route Open Source License for more details.
C//
C// You should have received a copy of the Alternate Open Source License
C// along with this program; if not, write to the Washington State
C// Department of Transportation, Bridge and Structures Office,
C// 4500 3rd Ave SE, P.O. Box 47340, Olympia, WA 98503, USA or e-mail
C// Bridge_Support@wsdot.wa.gov
C///////////////////////////////////////////////////////////////////////

C     PROGRAM GROUP
C
C
C     THE MAIN PROGRAM GROUP  READS IN AND PRINTS OUT ALL THE DATA
C     WHICH ARE COMMONLY USED BY ALL THE SUBPROGRAMS. THIS PROGRAM
C     PERFORMS THE OPERATION OF SEEKING THE EQUILIBRIUM BETWEEN THE
C     EXTERNAL LOAD AND THE PILE REACTIONS BY THE SUCCESSIVE DISPLACE
C     -MENT CORRECTION METHOD.
C
C     MODIFICATION:
C     CHANGED TO DOUBLE PRECISION 3-27-85 BY R. L. CHEN AND
C     N. J. CAMPBELL. SEE IMPLICIT REALS AND REAL*8S.
C     ALSO COMMON BLOCS REARRANGED TO ORDER R*8S,I*4S
C     SPECIAL NOTE ON CHARACTER*8 TC FOR ALL SUBS AND MAIN WHERE BLOC04
C
C     T - TERRY BEEBE - VMS CONVERSION - JANUARY 1990                     T 
C     RICHARD BRICE - RECOMPILED FOR VMS VERSION 5.5 - 04/27/93
C

      IMPLICIT REAL*8 (A-H),REAL*8 (P-Z)
      CHARACTER*4 KASE,IUNIT1,IUNIT2
      REAL*8 LENGTH,K
      CHARACTER*8 TC,UN1,UN2,UN3,UN4,UN5,UN6,UN7,UN8,UN9,UN10,UN11
C     CHARACTER*4 TITLE(20),ISYSTM
      CHARACTER*80 TITLE
      CHARACTER*4 ISYSTM
      DIMENSION FV(3,1), SK(3,3), DFV(3,1), COF(3,3),
     1          PDV(3,1), DDV(3,1), RV(3,1), RV1(3,1),
     2          RV2(3,1), RV3(3,1)
      INTEGER   UNITS
C
      COMMON / BLOC00 / TC(20)
      COMMON / BLOC04 / POTT(20),
     1                  DISTB(20),DISTA(20),THETA(20),DPS(20),
     2                  FDBET(20),KNPL,KP(20),KA(20),KS(20)
      COMMON / BLOC07 / XINC(20), YIELD(20), YOUNG(20),
     1                  NDS(20), NI(20), KTYPE(20)
      COMMON / BLOC10 / XX1(20,5), XX2(20,5), RRI(20,5),
     1                  SIZE(20,5), AREA(20,5), XRI(20,5),
     2                  BULT(20,5,20), PULT(20,5,20), NINTER(20,5)
      COMMON / BLOC11 / XS(5,20), YC(5,20,25), PC(5,20,25), NC(5),
     1                  NP(5,20)
      COMMON / BLOC12 / KFLAG, KEY, KIG, KOI, KAX, KAR, KNODE
      COMMON / BLOC16 / ZZZ(5,25), SSS(5,25), DV(3,1), II(5)
      COMMON /BLOC01/ XN(20,307),DIAM,PI,EM14,EM6,EM5,LENGTH(20),NN
      COMMON /BLOC02/ XTOP(10),XBOT(10),XGS,NL,ITOP(10),IBOT(10)
      COMMON /BLOC03/ ES(307),Y(307),LAYER(10),K(10)
      COMMON /BLOC05/ TOLP,KSOIL(10),ITOPL,IBOTL,MAXIT
      COMMON /BLOC06/ XW(10),WW(10),W(307),NW
      COMMON /BLOC08/ XG1(10),GAM1(10)
     1 ,XSTR(10),C1(10),PHI1(10),EE50(10),NSTR,NG1
      COMMON /BLOC09/ YINC,XSP(10),RCYCL,KTHRU,KCYCL,KPYOP,IT,IGP
      COMMON /BLOC13/ AE(10),FR(10),FYR,KUNIF
      COMMON /BLOC14/ UN1,UN2,UN3,UN4,UN5,UN6,UN7,UN8,UN9,UN10,UN11,
     1 ISYSTM
C
      DATA KASE/'END'/,DELTA/0.00001/,IUNIT1/'METR'/,IUNIT2/'ENGL'/
C
C-----START INPUTTING DATA
C
      CALL PARM
      INUNIT = 5
      OUNIT = 6 
C
C  IF PC VERSION SET PRINTER TO COMPRESSED. NOTE 3 COMMANDS BEFORE
C  ALL STOP STATEMENTS TO RESET PRINTER TO NORMAL OPERATIONS.
C  ACTUAL CHARACTERS NOT IN MAIN FRAME VERSION
C
C      WRITE(6,'('' '')')
CC
C
C
      PI=3.141592654
      EM5=1.D-5
      EM6=1.D-6
      EM14=1.D-14
C
C-----INPUT TABLE A  (TITLE OF RUN)
C  10 READ (5,600) (TITLE(I),I=1,20)
   10 READ (INUNIT,600)TITLE
C     IF (TITLE(1).EQ.KASE) GO TO 590
      IF (TITLE .EQ. KASE) GOTO 590
C
C-----INPUT TABLE B     (SWITCH FOR INPUT AND OUTPUT)
      READ (INUNIT,610) KIC,KID,KIE,KIF,KIG,KIH,KOC,KOD,KOE,KOF,KOG,KOH
     1,KOI
C
C-----INPUT TABLE C     (LOAD AND CONTROL PARAMETERS)
      IF (KIC.EQ.0) GO TO 20
      READ (INUNIT,1120) ISYSTM,KPYOP,KCYCL,RCYCL
      UNITS=0
      IF (ISYSTM.EQ.IUNIT1) UNITS=-1
      IF (ISYSTM.EQ.IUNIT2) UNITS=1
      CALL UNITSS (UNITS)
      IF (KCYCL.EQ.0.AND.RCYCL.LT.EM6) RCYCL=100.
      IF (KPYOP.EQ.-1) GO TO 200
      READ (INUNIT,1130) NW,MAXFD,MAXIT,TOLFD,TOLP
      READ (INUNIT,620) FV(1,1),FV(2,1),FV(3,1)
      IF (MAXIT.EQ.0) MAXIT=100
      IF (MAXFD.EQ.0) MAXFD=100
      IF (TOLFD.LT.EM14) TOLFD=EM5
      IF (TOLP.LT.EM14) TOLP=EM5
      IF (NW.EQ.0) GO TO 20
      READ (INUNIT,660) (XW(J),WW(J),J=1,NW)
C
C-----INPUT TABLE D     (PILE GROUP ARRANGEMENT)
   20 IF (KID.EQ.0) GO TO 40
      READ (5,610) KNPL
      DO 30 I=1,KNPL
      READ (INUNIT,630) TC(I),IPOTT,KP(I),KA(I),KS(I),DISTB(I),DISTA(I) 
     1,THETA(I),DPS(I),FDBET(I)
      POTT(I)=IPOTT
   30 CONTINUE
C
C-----INPUT TABLE E      (PILE GEOMETRY AND PROPERTIES)
   40 IF (KIE.EQ.0) GO TO 140
      READ (INUNIT,610) NPILE
      DO 130 I=1,NPILE
      READ (INUNIT,640) IDP,NDS(I),NI(I),KTYPE(I),LENGTH(I),YIELD(I),
     1YOUNG(I)
      XINC(I)=LENGTH(I)/NI(I)
      INDEX=NDS(I)
      DO 120 J=1,INDEX
      READ (INUNIT,890) XX1(IDP,J),XX2(IDP,J),SIZE(IDP,J),AREA(IDP,J),
     1XRI(IDP,J)
      RRI(IDP,J)=XRI(IDP,J)*YOUNG(I)
      MATL=KTYPE(I)
      GO TO (70,70,70,50,120), MATL
   50 CONTINUE
      READ (INUNIT,610) NINTER(I,J)
      INTER=NINTER(I,J)
      DO 60 L=1,INTER
      READ (INUNIT,660) PULT(I,J,L),BULT(I,J,L)
   60 CONTINUE
      GO TO 120
   70 CONTINUE
      GO TO (80,90,100), MATL
   80 SF=1.14
      GO TO 110
   90 SF=1.50
      GO TO 110
  100 SF=1.27
  110 CONTINUE
      NINTER(I,J)=2
      PULT(I,J,1)=AREA(IDP,J)*YIELD(I)
      BULT(I,J,2)=2.0*SF*YIELD(I)*XRI(IDP,J)/SIZE(IDP,J)
      BULT(I,J,1)=0.0
      PULT(I,J,2)=0.0
  120 CONTINUE
  130 CONTINUE
C
C-----INPUT TABLE F     (AXIAL LOAD VS SETTLEMENT)
  140 IF (KIF.EQ.0) GO TO 160
      READ (INUNIT,610) NKA
      DO 150 I=1,NKA
      READ (INUNIT,610) IDEN,II(I)
      INDEX=II(I)
      READ (INUNIT,660) (SSS(IDEN,J),ZZZ(IDEN,J),J=1,INDEX)
  150 CONTINUE
C
C-----INPUT TABLE G     (P-Y CURVES)
  160 IF (KIG.NE.1) GO TO 200
      READ (INUNIT,610) NKS
      DO 190 I=1,NKS
      READ (INUNIT,610) IDPY,NC(I)
      INDEX=NC(I)
      DO 180 J=1,INDEX
      READ (INUNIT,880) XS(IDPY,J),NP(IDPY,J)
      INDEX2=NP(IDPY,J)
      DO 170 L=1,INDEX2
      READ (INUNIT,660) PC(IDPY,J,L),YC(IDPY,J,L)
  170 CONTINUE
  180 CONTINUE
  190 CONTINUE
C
C-----INPUT TABLE H   (SOIL DATA FOR AUTOMATIC GENERATION OF P-Y CURVE )
  200 IF (KIH.EQ.0) GO TO 270
      READ (INUNIT,1140) NL,NG1,NSTR,XGS
      IF (KPYOP.EQ.0) GO TO 240
      IF (KPYOP.EQ.-1) GO TO 210
      READ (INUNIT,1150) IGP,NN
      ID=KP(IGP)
      GO TO 220
  210 READ (INUNIT,1160) DIAM,NN
      ID=1
  220 DO 230 I=1,NN
      READ (INUNIT,1170) XN(ID,I)
  230 CONTINUE
  240 DO 250 J=1,NL
      READ (INUNIT,1180) LAYER(J),KSOIL(J),XTOP(J),XBOT(J),K(J),AE(J),  
     1FR(J)
      IF (J.NE.1.AND.J.NE.NL) XBOT(J-1)=XTOP(J)
      IF (KSOIL(J).EQ.5) KUNIF=5
  250 CONTINUE
C
      FYR=20.
      IF (KCYCL.EQ.1) FYR=30.
C
      READ (INUNIT,660) (XG1(J),GAM1(J),J=1,NG1)
C
      DO 260 J=1,NSTR
      READ (INUNIT,650) XSTR(J),C1(J),PHI1(J),EE50(J)
      PHI1(J)=PHI1(J)*PI/180.
  260 CONTINUE
C
C
C-----START OF PRINTING OUT THE INPUT DATA
C
C-----OUTPUT TABLE A     (TITLE OF RUN)
C 270 WRITE (6,670) (TITLE(I),I=1,20)
  270 WRITE (OUNIT,670)TITLE
      WRITE (OUNIT,1190)
C-----OUTPUT TABLE B     ( SWITCH FOR INPUT AND OUTPUT)
      WRITE (OUNIT,940)
      WRITE (OUNIT,920)
      WRITE (OUNIT,950)
      WRITE (OUNIT,960) KIC,KID,KIE,KIF,KIG,KIH
      WRITE (OUNIT,970) KOC,KOD,KOE,KOF,KOG,KOH,KOI
      WRITE (OUNIT,860)
C
C-----OUTPUT TABLE C     (LOAD AND CONTROL PARAMETERS)
      IF (KOC.EQ.0) GO TO 290
      WRITE (OUNIT,680)
      WRITE (OUNIT,1200) ISYSTM
      IF (KPYOP.EQ.-1) GO TO 280
      WRITE (OUNIT,690) UN4,UN4,UN4,UN6,UN3
      WRITE (OUNIT,700) FV(1,1),FV(2,1),FV(3,1)
      IF (NW.EQ.0) GO TO 280
      WRITE (OUNIT,1210) NW,UN3,UN4,UN5,UN3
      WRITE (OUNIT,1220) (XW(J),WW(J),J=1,NW)
  280 IF (KCYCL.EQ.0) WRITE (6,1230) RCYCL
      IF (KCYCL.EQ.1) WRITE (6,1240)
      WRITE (OUNIT,1250) KPYOP
      IF (KPYOP.EQ.-1) GO TO 410
      WRITE (OUNIT,1260) TOLFD,UN1,TOLP,UN1,MAXFD,MAXIT
C
C-----OUTPUT TABLE D     (PILE GROUP ARRANGEMENT)
  290 IF (KOD.EQ.0) GO TO 320
      WRITE (OUNIT,710)
      WRITE (OUNIT,720)
      DO 300 I=1,KNPL
      IPOTT=POTT(I)
      WRITE (OUNIT,730) I,TC(I),IPOTT,KP(I),KA(I),KS(I)
  300 CONTINUE
      WRITE (OUNIT,740) UN3,UN3,UN3,UN5,UN3,UN3,UN4,UN6,UN3
      DO 310 I=1,KNPL
  310 WRITE (OUNIT,750) I,DISTB(I),DISTA(I),THETA(I),DPS(I),FDBET(I)
C
C-----OUTPUT TABLE E          (PILE GEOMETRY AND PROPERTIES)
  320 IF (KOE.EQ.0) GO TO 360
      WRITE (OUNIT,760)
      WRITE (OUNIT,770) UN1,UN4,UN5,UN3,UN7,UN8,UN4,UN5,UN3,UN7,UN8
      WRITE (OUNIT,870) (I,NDS(I),NI(I),KTYPE(I),LENGTH(I),YIELD(I),
     1YOUNG(I),I=1,NPILE)
      WRITE (OUNIT,1090)
      WRITE (OUNIT,910) UN3,UN3,UN3,UN3,UN7,UN8,UN3,UN7,UN10
      DO 350 I=1,NPILE
      INDEX=NDS(I)
      DO 340 J=1,INDEX
      WRITE (OUNIT,1070) I,XX1(I,J),XX2(I,J),SIZE(I,J),AREA(I,J),
     1XRI(I,J)
      MATL=KTYPE(I)
      IF (MATL.EQ.5) GO TO 330
      INTER=NINTER(I,J)
      WRITE (OUNIT,980) INTER,UN2,UN3,UN6,UN4
      WRITE (OUNIT,930) (PULT(I,J,L),BULT(I,J,L),L=1,INTER)
      GO TO 340
  330 WRITE (6,990)
  340 CONTINUE
  350 CONTINUE
C
C-----OUTPUT TABLE F     (AXIAL LOAD VS SETTLEMENT)
  360 IF (KOF.EQ.0) GO TO 380
      WRITE (OUNIT,780)
      WRITE (OUNIT,1000) NKA
      DO 370 I=1,NKA
      WRITE (OUNIT,790) I,II(I)
      WRITE (OUNIT,800) UN4,UN1
      INDEX=II(I)
      WRITE (OUNIT,810) (J,SSS(I,J),ZZZ(I,J),J=1,INDEX)
  370 CONTINUE
C
C-----OUTPUT TABLE G     (P-Y CURVES)
  380 IF (KOG.EQ.0) GO TO 410
      WRITE (OUNIT,820)
      WRITE (OUNIT,1010) NKS
      DO 400 I=1,NKS
      WRITE (OUNIT,830) I,NC(I)
      INDEX=NC(I)
      DO 400 J=1,INDEX
      WRITE (OUNIT,840) J,XS(I,J),UN1,NP(I,J)
      WRITE (OUNIT,850) UN2,UN1
      INDEX2=NP(I,J)
      DO 390 KL=1,INDEX2
      WRITE (OUNIT,810) KL,PC(I,J,KL),YC(I,J,KL)
  390 CONTINUE
  400 CONTINUE
C
C-----OUTPUT TABLE H  ( SOIL DATA FOR AUTOMATIC GENERATION OF P-Y
C     CURVES
  410 IF (KOH.EQ.0) GO TO 470
      WRITE (OUNIT,900)
      WRITE (OUNIT,1270)
      WRITE (OUNIT,1280) XGS,UN1
      WRITE (OUNIT,1290) NL
C
      DO 420 J=1,NL
      WRITE (6,1300) J
      IF (KSOIL(J).EQ.1) WRITE (OUNIT,1310)
      IF (KSOIL(J).EQ.2) WRITE (OUNIT,1320)
      IF (KSOIL(J).EQ.3) WRITE (OUNIT,1330)
      IF (KSOIL(J).EQ.4) WRITE (OUNIT,1340)
      IF (KSOIL(J).EQ.5) WRITE (OUNIT,1350)
      WRITE (OUNIT,1360) XTOP(J),UN1,XBOT(J),UN1,K(J),UN2,UN5,UN3,UN7
     1,UN9
C
  420 CONTINUE
      WRITE (OUNIT,1370) NG1,UN3,UN4,UN5,UN3,UN7,UN9
      WRITE (OUNIT,1380) (XG1(J),GAM1(J),J=1,NG1)
      WRITE (OUNIT,1390) NSTR,UN3,UN4,UN5,UN3,UN7,UN8
C
      DO 440 J=1,NSTR
      PHIDEG=PHI1(J)*180./PI
      IF (DABS(EE50(NSTR)).GT.EM6) GO TO 430
      WRITE (OUNIT,1400) XSTR(J),C1(J),PHIDEG
      GO TO 440
  430 WRITE (OUNIT,1410) XSTR(J),C1(J),PHIDEG,EE50(J)
  440 CONTINUE
      IF (KUNIF.NE.5) GO TO 460
      WRITE (OUNIT,1420)
      DO 450 I=1,NL
      IF (KSOIL(I).NE.5) GO TO 450
      WRITE (OUNIT,1430) I,AE(I),FR(I)
  450 CONTINUE
C
  460 IF (KPYOP.EQ.0) GO TO 470
      CALL PYGEN (ID)
      IF (KPYOP.EQ.1) KPYOP=0
      IF (KPYOP.EQ.-1) GO TO 10
C
C-----START EXECUTION OF PROGRAM
C
C-----SET INITIAL DISPL VECTOR DV AND CONSTANTS
  470 KFLAG=0
      KEY=0
      KTHRU=0
      KNODE=1
      ITERA=1
      DV(1,1)=0.0
      DV(2,1)=0.0
      DV(3,1)=0.0
      DDV(1,1)=0.001
      DDV(2,1)=0.001
      DDV(3,1)=0.0
C-----CORRECT THE BENT DISPLACEMENT
  480 DO 490 I=1,3
  490 DV(I,1)=DV(I,1)+DDV(I,1)
C-----COMPUTE PILE REACTIONS FOR THE NEW DISPLACEMENT
      CALL FVEC (RV)
      KNODE=0
      IF (KEY.EQ.1) GO TO 590
      IF (KAX.EQ.1) GO TO 590
      IF (KAR.EQ.1) GO TO 590
      IF (KFLAG.EQ.1) GO TO 10
C-----COMPUTE THE DIFFERENCE BETWEEN LOAD AND REACTION
      DO 500 I=1,3
      DFV(I,1)=FV(I,1)-RV(I,1)
  500 CONTINUE
C-----COMPUTE PARTIAL DERIVATIVES
      DV(1,1)=DV(1,1)+DELTA
      CALL FVEC (RV1)
      DV(1,1)=DV(1,1)-DELTA
      DV(2,1)=DV(2,1)+DELTA
      CALL FVEC (RV2)
      DV(2,1)=DV(2,1)-DELTA
      DV(3,1)=DV(3,1)+0.001*DELTA
      CALL FVEC (RV3)
      IF (KEY.EQ.1) GO TO 590
      DO 510 I=1,3
      SK(I,1)=(-RV(I,1)+RV1(I,1))/DELTA
      SK(I,2)=(-RV(I,1)+RV2(I,1))/DELTA
      SK(I,3)=(-RV(I,1)+RV3(I,1))/(0.001*DELTA)
  510 CONTINUE
C-----INVERT STRUCTURAL STIFFNESS MATRIX SK
      COF(1,1)=SK(2,2)*SK(3,3)-SK(3,2)*SK(2,3)
      COF(1,2)=SK(2,3)*SK(3,1)-SK(2,1)*SK(3,3)
      COF(1,3)=SK(2,1)*SK(3,2)-SK(2,2)*SK(3,1)
      COF(2,1)=SK(1,3)*SK(3,2)-SK(1,2)*SK(3,3)
      COF(2,2)=SK(1,1)*SK(3,3)-SK(1,3)*SK(3,1)
      COF(2,3)=SK(1,2)*SK(3,1)-SK(1,1)*SK(3,2)
      COF(3,1)=SK(1,2)*SK(2,3)-SK(1,3)*SK(2,2)
      COF(3,2)=SK(1,3)*SK(2,1)-SK(1,1)*SK(2,3)
      COF(3,3)=SK(1,1)*SK(2,2)-SK(1,2)*SK(2,1)
      DET=0.0
      DO 520 NCOL=1,3
  520 DET=DET+SK(1,NCOL)*COF(1,NCOL)
      IF (DET.NE.0.0) GO TO 530
      WRITE (OUNIT,1060)
C
C  IF PC VERSION RESET PRINTER TO NORMAL. NOTE COMMAND AT BEG. OF
C  PROGRAM TO SET PRINTER TO COMPRESSED.
C  ACTUAL CHARACTERS NOT IN MAIN FRAME VERSION
C
      WRITE(OUNIT,'('' '')')
C
      STOP 0
  530 DO 540 NROW=1,3
      DO 540 NCOL=1,3
      SK(NROW,NCOL)=COF(NCOL,NROW)/DET
  540 CONTINUE
C-----COMPUTE DISPLACEMENT CORRECTION
      CALL MULT (DDV,SK,DFV,1)
C-----CHECK CONVERGENCE OF REACTION
      DO 550 I=1,3
      IF (DABS(DDV(I,1)).GE.TOLFD) GO TO 560
  550 CONTINUE
      GO TO 580
  560 ITERA=ITERA+1
      IF (ITERA.GE.MAXFD) GO TO 570
      GO TO 480
  570 WRITE (OUNIT,1050) MAXFD
C
C  IF PC VERSION RESET PRINTER TO NORMAL. NOTE COMMAND AT BEG. OF
C  PROGRAM TO SET PRINTER TO COMPRESSED.
C  ACTUAL CHARACTERS NOT IN MAIN FRAME VERSION
C
C     WRITE(OUNIT,'('' '')')
C
      STOP 1
C 580 WRITE (OUNIT,670) (TITLE(I),I=1,20)
  580 WRITE (OUNIT,670)TITLE  
      WRITE (OUNIT,1080)
      WRITE (OUNIT,1100)
      WRITE (OUNIT,1030) UN3,UN3,UN11
      WRITE (OUNIT,1040) DV(1,1),DV(2,1),DV(3,1)
      KFLAG=1
      WRITE (OUNIT,1020) ITERA
      WRITE (OUNIT,1110)
      GO TO 480
  590 CONTINUE
      GOTO 596
  595 WRITE(*,FMT='(//,1X,'' INPUT ERROR...CHECK YOUR INPUT DATA'',/)')
C
  596 A=1
  600 FORMAT (80A)
  610 FORMAT (13I5)
  620 FORMAT (4D10.3,I5)
  630 FORMAT (2X,A3,4I5,5D10.3)
  640 FORMAT (4I5,3D10.3)
  650 FORMAT (4D10.3)
  660 FORMAT (2D10.3)
  670 FORMAT ('1',5X,80A)
  680 FORMAT (///5X,40H* TABLE C *  LOAD AND CONTROL PARAMETERS)
  690 FORMAT (/10X,7HV LOAD,,A3,5X,7HH LOAD,,A3,4X,7HMOMENT,,A3,A1,A2,/)
  700 FORMAT (5X,3D15.4)
  710 FORMAT (///5X,40H* TABLE D *   ARRANGEMENT OF PILE GROUPS)
  720 FORMAT (/7X,47HGROUP  CONNECT  NO OF PILE PILE NO  L-S CURVE  ,9HP
     1-Y CURVE)
  730 FORMAT (5X,I5,6X,A3,5X,I5,4X,I5,5X,I5,7X,I5)
  740 FORMAT (/7X,5HGROUP,9X,5HVERT,,A2,5X,4HHOR,,A2,4X,6HSLOPE,,A2,A1,A
     12,2X,7HGROUND,,A2,1X,7HSPRING,,A3,A1,A2)
  750 FORMAT (5X,I5,7X,5D12.4)
  760 FORMAT (///5X,42H* TABLE E *   PILE GEOMETRY AND PROPERTIES)
  770 FORMAT (/7X,6HPILE  ,5HSEC  ,5HINC  ,8HMATERIAL,5X,7HLENGTH,,A3,3X
     1,6HYIELD,,A3,A1,A2,A2,A1,2X,2HE,,A3,A1,A2,A2,A1)
  780 FORMAT (///5X,39H* TABLE F *   AXIAL LOAD VS SETTLEMENT )
  790 FORMAT (/8X,5HCURVE,I3,10X,13HNUM OF POINTS,I3,/)
  800 FORMAT (12X,5HPOINT,6X,11HAXIAL LOAD,,A3,6X,11HSETTLEMENT,,A3)
  810 FORMAT (10X,I5,9X,D11.4,9X,D11.4)
  820 FORMAT (///5X,30H* TABLE G *   INPUT P-Y CURVES)
  830 FORMAT (//7X,3HSET,I3,10X,13HNUM OF CURVES,I3,/)
  840 FORMAT (/8X,5HCURVE,I3,6X,28HDISTANCE FROM GROUND SURFACE,2X,D10.3
     1,A3,4X,13HNUM OF POINTS,I3,/)
  850 FORMAT (12X,5HPOINT,12X,1HP,A4,16X,1HY,A3)
  860 FORMAT (/7X,35H(C LOAD   D ARRANGEMENT   E PILE   ,36HF L-S   G P-
     1Y   H SOIL DATA   I LLP))
  870 FORMAT (5X,2I5,I6,I7,3X,3D15.4)
  880 FORMAT (D10.3,I5)
  890 FORMAT (5D10.3)
  900 FORMAT (///,5X,43H* TABLE H *   SOIL DATA FOR AUTO P-Y CURVES)
  910 FORMAT (7X,4HPILE,3X,5HFROM,,A2,6X,3HTO,,A2,6X,5HDIAM,,A2,3X,5HARE
     1A,,A2,A2,A1,4X,2HI,,A2,A2,A1)
  920 FORMAT (/,22X,27H* IF P-Y CURVES ARE INPUT *,/5X,61H* ENTER KIG=1
     1IN FIRST RUN AND KIG=-1 IN EACH SUBSEQUENT RUN *)
  930 FORMAT (10X,2D15.4)
  940 FORMAT (///5X,37H* TABLE B *   INPUT AND OUTPUT SWITCH,5X,19H(IF 1
     1 YES, IF 0 NO))
  950 FORMAT (/,7X,42HTABLE     C    D    E    F    G    H    I )
  960 FORMAT (7X,6HINPUT ,7I5)
  970 FORMAT (7X,6HOUTPUT,7I5)
  980 FORMAT (//,11X,19HINTERACTION DIAGRAM,10X,13HNUM OF POINTS,I3,//,1
     16X,4HPULT,A4,6X,4HMULT,1X,A2,A1,A3)
  990 FORMAT (/11X,50H* THE PILE ABOVE IS OF LINEARLY ELASTIC MATERIAL *
     1)
 1000 FORMAT (/7X,13HNUM OF CURVES,I3)
 1010 FORMAT (/7X,13HNUM OF SETS :,I3)
 1020 FORMAT (//10X,23HNUMBER OF ITERATIONS = ,I3)
 1030 FORMAT (//15X,9HVERTICAL,,A2,3X,11HHORIZONTAL,,A2,3X,9HROTATION,,A
     13,/)
 1040 FORMAT (10X,3D15.4)
 1050 FORMAT (//10X,39HPILE CAP DISPL DOES NOT CONVERGE AFTER ,I3,2X,
     110HITERATIONS)
 1060 FORMAT (//10X,39HDETERMINANT OF STIFFNESS MATRIX IS ZERO)
 1070 FORMAT (/5X,I5,5D12.4)
 1080 FORMAT (///17X,5H*****,5X,19HCOMPUTATION RESULTS,5X,5H*****,/)
 1090 FORMAT (/10X,44H(MATERIAL  1 STEEL H, 2 STEEL H(WEAK AXIS), ,3H 3
     1,10HSTEEL PIPE,/21X,27H4 OTHERS WITH INT DIAGRAM, ,29H5 OTHERS WIT
     2HOUT INT DIAGRAM)/)
 1100 FORMAT (///17X,39HDISPLACEMENT OF GROUPED PILE FOUNDATION)
 1110 FORMAT (///5X,44H* TABLE I *   COMPUTATION ON INDIVIDUAL PILE)
 1120 FORMAT (1X,A4,2I5,D10.3)
 1130 FORMAT (3I5,2D10.3)
 1140 FORMAT (3I5,D10.3)
 1150 FORMAT (2I5)
 1160 FORMAT (D10.3,I5)
 1170 FORMAT (D10.3)
 1180 FORMAT (2I5,5D10.3)
 1190 FORMAT (///16X,5H*****,5X,17HINPUT INFORMATION,5X,5H*****,/)
 1200 FORMAT (//5X,7HUNITS--,A4)
 1210 FORMAT (//20X,22HDISTRIBUTED LOAD CURVE,10X,I2,7H POINTS//31X,2HX,
     1,A2,6X,5HLOAD,,A3,A1,A2)
 1220 FORMAT (25X,F10.2,7X,D10.3)
 1230 FORMAT (//5X,25H* THE LOADING IS CYCLIC *,//5X,16HNO. OF CYCLES =
     1,F10.2)
 1240 FORMAT (//5X,25H* THE LOADING IS STATIC *)
 1250 FORMAT (//9X,8HKPYOP = ,I2,5X,29H(CODE TO GENERATE P-Y CURVES),//,
     19X,57H( KPYOP = 1 IF P-Y YES; = 0 IF P-Y NO; = -1 IF P-Y ONLY ))
 1260 FORMAT (//5X,22H* CONTROL PARAMETERS *,/,9X,47HTOLERANCE ON CONVER
     1GENCE OF FOUNDATION REACTION,5X,3H = ,D10.3,A3,/,9X,41HTOLERANCE O
     2N DETERMINATION OF DEFLECTIONS,11X,3H = ,D10.3,A3,/9X,54HMAX NO OF
     3 ITERATIONS ALLOWED FOR FOUNDATION ANALYSIS =,I8,/,9X,54HMAXIMUM N
     4O. OF ITERATIONS ALLOWED FOR PILE ANALYSIS  =,I8)
 1270 FORMAT (//5X,17HSOILS INFORMATION)
 1280 FORMAT (/9X,35HX AT THE GROUND SURFACE          = ,F10.2,A3)
 1290 FORMAT (/9X,I1,17H LAYER(S) OF SOIL)
 1300 FORMAT (/9X,5HLAYER,I3)
 1310 FORMAT (9X,23HTHE SOIL IS A SOFT CLAY)
 1320 FORMAT (9X,46HTHE SOIL IS A STIFF CLAY BELOW THE WATER TABLE)
 1330 FORMAT (9X,46HTHE SOIL IS A STIFF CLAY ABOVE THE WATER TABLE)
 1340 FORMAT (9X,18HTHE SOIL IS A SAND)
 1350 FORMAT (9X,28HTHE SOIL IS A SUBMERGED CLAY)
 1360 FORMAT (9X,35HX AT THE TOP OF THE LAYER        = ,F10.2,A3/9X,35HX
     1 AT THE BOTTOM OF THE LAYER     = ,F10.2,A3/9X,35HMODULUS OF SUBGR
     2ADE REACTION     = ,D10.3,A4,A1,A2,A2,A1)
 1370 FORMAT (//9X,48HDISTRIBUTION OF EFFECTIVE UNIT WEIGHT WITH DEPTH/2
     17X,I2,7H POINTS//21X,2HX,,A2,3X,7HWEIGHT,,A3,A1,A2,A2,A1)
 1380 FORMAT (10X,F15.4,D15.4)
 1390 FORMAT (//9X,46HDISTRIBUTION OF STRENGTH PARAMETERS WITH DEPTH/27X
     1,I2,7H POINTS//21X,2HX,,A2,5X,2HC,,A3,A1,A2,A2,A1,6X,11HPHI,DEGREE
     2S,6X,3HE50)
 1400 FORMAT (10X,F15.2,2X,D13.4,2X,F13.3,7X,5H-----)
 1410 FORMAT (10X,F15.2,2X,D13.4,2X,F13.3,D15.4)
 1420 FORMAT (//5X,23HUNIFIED CLAY PARAMETERS//5X,5HLAYER,5X,1HA,10X,1HF
     1)
 1430 FORMAT (6X,I2,2X,D10.3,1X,D10.3)
C
C
C  IF PC VERSION RESET PRINTER TO NORMAL. NOTE COMMAND AT BEG. OF
C  PROGRAM TO SET PRINTER TO COMPRESSED.
C  ACTUAL CHARACTERS NOT IN MAIN FRAME VERSION
C
C     WRITE(OUNIT,'('' '')')
C
      STOP
      END

