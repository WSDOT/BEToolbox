// QConLE.idl : IDL source for QConLE.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (QConLE.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
import "StrStorage2.idl";

   typedef
   [
      public,
      uuid(FA09DB97-D3EC-4ebc-AF91-5BF2EDD62D13),
      helpstring("Designates type model"),
   ] 
   enum QCLEModelType
   {
      qcmtS2SS=5, // two stage, simple spans
      qcmtS2CC=4, // two stage, cont/cont
      qcmtSDCL=3, // simple dead/cont live
      qcmtS1SS=2, // one stage, simple spans
      qcmtS1CS=1  // one stage, continuous spans
   } QCLEModelType;

   typedef
   [
      public,
      uuid(740607DD-294B-47cd-A4AA-CCA6C06641D2),
      helpstring("Designates units"),
   ] 
   enum QCLEUnitType
   {
      qcmtUS=1, 
      qcmtSI=2  
   } QCLEUnitType;

	[
		object,
		uuid(ABCC8797-5F3A-446E-8A42-64752F7CB5D1),
		dual,
		helpstring("IQConLESpan Interface"),
		pointer_default(unique)
	]
	interface IQConLESpan : IDispatch
	{
		[propget, id(1), helpstring("property Length")] HRESULT Length([out, retval] double *pVal);
		[propput, id(1), helpstring("property Length")] HRESULT Length([in] double newVal);
		[propget, id(2), helpstring("property StageIEI")] HRESULT StageIEI([out, retval] double *pVal);
		[propput, id(2), helpstring("property StageIEI")] HRESULT StageIEI([in] double newVal);
		[propget, id(3), helpstring("property StageIIEI")] HRESULT StageIIEI([out, retval] double *pVal);
		[propput, id(3), helpstring("property StageIIEI")] HRESULT StageIIEI([in] double newVal);
		[propget, id(4), helpstring("property gMp")] HRESULT gMp([out, retval] double *pVal);
		[propput, id(4), helpstring("property gMp")] HRESULT gMp([in] double newVal);
		[propget, id(5), helpstring("property gMn")] HRESULT gMn([out, retval] double *pVal);
		[propput, id(5), helpstring("property gMn")] HRESULT gMn([in] double newVal);
		[propget, id(6), helpstring("property gV")] HRESULT gV([out, retval] double *pVal);
		[propput, id(6), helpstring("property gV")] HRESULT gV([in] double newVal);
		[propget, id(7), helpstring("property StageIDC")] HRESULT StageIDC([out, retval] double *pVal);
		[propput, id(7), helpstring("property StageIDC")] HRESULT StageIDC([in] double newVal);
		[propget, id(8), helpstring("property StageIIDC")] HRESULT StageIIDC([out, retval] double *pVal);
		[propput, id(8), helpstring("property StageIIDC")] HRESULT StageIIDC([in] double newVal);
		[propget, id(9), helpstring("property StageIDW")] HRESULT StageIDW([out, retval] double *pVal);
		[propput, id(9), helpstring("property StageIDW")] HRESULT StageIDW([in] double newVal);
		[propget, id(10), helpstring("property StageIIDW")] HRESULT StageIIDW([out, retval] double *pVal);
		[propput, id(10), helpstring("property StageIIDW")] HRESULT StageIIDW([in] double newVal);
		[propget, id(11), helpstring("property gMnSupport - Negative moment df for left support")] HRESULT gMnSupport([out, retval] double  *pVal);
		[propput, id(11), helpstring("property gMnSupport")] HRESULT gMnSupport([in] double  newVal);
	};


	[
	   object,
	   uuid(256E392C-14CA-4a39-8C1B-3CAAC0B83956),
	   helpstring("IEnumQConLESpan Interface"),
	   oleautomation,nonextensible,
	   hidden,restricted,
	   pointer_default(unique)
	]
	interface IEnumQConLESpan : IUnknown
	{
       [helpstring("Clone")]
	   HRESULT Clone([out] IEnumQConLESpan** ppenum);
	   [helpstring("Next")]
	   HRESULT Next([in] ULONG celt, [out] IQConLESpan** rgelt, [in,out] ULONG* pceltFetched);
	   [helpstring("Reset")]
	   HRESULT Reset();
	   [helpstring("Skip")]
	   HRESULT Skip([in] ULONG celt);
	};


	[
		object,
		uuid(C9EE241D-3A34-4EBD-8054-6DA1989BC6B0),
		dual,
		helpstring("IQConLESpans Interface"),
		pointer_default(unique)
	]
	interface IQConLESpans : IDispatch
	{
		[propget, id(DISPID_VALUE), helpstring("property Item")] 
		HRESULT Item([in]long idx, [out, retval] IQConLESpan** pVal);
		[propget, id(DISPID_NEWENUM)]
		HRESULT _NewEnum([out, retval] IUnknown** retval);  
		[propget, id(1)] 
		HRESULT Count([out, retval] long *pVal);
		[propget, id(2)] 
		HRESULT _EnumElements([out, retval] IEnumQConLESpan* *pVal);
		[id(3)] 
		HRESULT Add([in] IQConLESpan *pVal);
		[id(4)] 
		HRESULT Insert([in] long index, [in] IQConLESpan *pVal);
		[id(5)] 
		HRESULT Remove([in]long index);
		[id(6)] 
        HRESULT Clear();
	};


	[
		object,
		uuid(B9EE01A5-2039-41B9-A84C-7046035B25C2),
		dual,
		helpstring("IQConLEEngine Interface"),
		pointer_default(unique)
	]
	interface IQConLEEngine : IDispatch
	{
		[propget, id(1), helpstring("property ModelType")] HRESULT ModelType([out, retval] QCLEModelType *pVal);
		[propput, id(1), helpstring("property ModelType")] HRESULT ModelType([in] QCLEModelType newVal);
		[propget, id(2), helpstring("property UnitType")] HRESULT UnitType([out, retval] QCLEUnitType *pVal);
		[propput, id(2), helpstring("property UnitType")] HRESULT UnitType([in] QCLEUnitType newVal);
		[propget, id(3), helpstring("property EnvelopeSimpleContinuous")] HRESULT EnvelopeSimpleContinuous([out, retval] VARIANT_BOOL *pVal);
		[propput, id(3), helpstring("property EnvelopeSimpleContinuous")] HRESULT EnvelopeSimpleContinuous([in] VARIANT_BOOL newVal);
		[propget, id(4), helpstring("property IncludeLowBoy")] HRESULT IncludeLowBoy([out, retval] VARIANT_BOOL *pVal);
		[propput, id(4), helpstring("property IncludeLowBoy")] HRESULT IncludeLowBoy([in] VARIANT_BOOL newVal);
		[propget, id(5), helpstring("property DoServiceI")] HRESULT DoServiceI([out, retval] VARIANT_BOOL *pVal);
		[propput, id(5), helpstring("property DoServiceI")] HRESULT DoServiceI([in] VARIANT_BOOL newVal);
		[propget, id(6), helpstring("property DoServiceII")] HRESULT DoServiceII([out, retval] VARIANT_BOOL *pVal);
		[propput, id(6), helpstring("property DoServiceII")] HRESULT DoServiceII([in] VARIANT_BOOL newVal);
		[propget, id(7), helpstring("property DoServiceIII")] HRESULT DoServiceIII([out, retval] VARIANT_BOOL *pVal);
		[propput, id(7), helpstring("property DoServiceIII")] HRESULT DoServiceIII([in] VARIANT_BOOL newVal);
		[propget, id(8), helpstring("property DoStrengthI")] HRESULT DoStrengthI([out, retval] VARIANT_BOOL *pVal);
		[propput, id(8), helpstring("property DoStrengthI")] HRESULT DoStrengthI([in] VARIANT_BOOL newVal);
		[propget, id(9), helpstring("property DoFatigue")] HRESULT DoFatigue([out, retval] VARIANT_BOOL *pVal);
		[propput, id(9), helpstring("property DoFatigue")] HRESULT DoFatigue([in] VARIANT_BOOL newVal);
		[propget, id(10), helpstring("property Spans")] HRESULT Spans([out, retval] IQConLESpans* *pVal);
		[propputref, id(10), helpstring("property Spans")] HRESULT Spans([in] IQConLESpans* newVal);
		[id(11), helpstring("method LoadFile")] HRESULT LoadFile([out, retval] VARIANT_BOOL *pCancelled);
		[id(12), helpstring("method SaveFile")] HRESULT SaveFile();
		[id(13), helpstring("method Clear")] HRESULT Clear();
		[id(14), helpstring("method Process")] HRESULT Process([out,retval]BSTR* Report);
		[id(15), helpstring("method ExportLBAM")] HRESULT ExportLBAM();
		[propget, id(16), helpstring("property DoDetailedReport")] HRESULT DoDetailedReport([out, retval] VARIANT_BOOL *pVal);
		[propput, id(16), helpstring("property DoDetailedReport")] HRESULT DoDetailedReport([in] VARIANT_BOOL newVal);
	};

[
	uuid(979C7861-24E4-438E-9047-9A017C54AE52),
	version(1.0),
	helpstring("QConLE 1.0 Type Library")
]
library QCONLELib
{
	importlib("stdole32.tlb");
	importlib("stdole2.tlb");

	[
		uuid(92DD3CCD-53E7-4BC2-8E79-02163B429DBC),
		helpstring("QConLEEngine Class")
	]
	coclass QConLEEngine
	{
		[default] interface IQConLEEngine;
	};
	[
		uuid(415902F4-6933-440D-9100-0D6A21743BDD),
		helpstring("QConLESpan Class")
	]
	coclass QConLESpan
	{
		[default] interface IQConLESpan;
	};
	[
		uuid(977308F5-3D73-4E04-B539-AC7BE5A8A7F1),
		helpstring("QConLESpans Class")
	]
	coclass QConLESpans
	{
		[default] interface IQConLESpans;
	};
};
